resources:
- title: Reverse Node in k-Group
  url: https://leetcode.com/problems/reverse-nodes-in-k-group/
tests: 
- function_name: pre_processing
  description: |
    Sets data up to facilitate processing downstream.
    Sets the current node as the head of the linked
    list.
  inputs_values:
  - linked_list:
      head: null
  - linked_list:
      head: 
        value: 1
        _next: null
  - linked_list:
      head: 
        value: 1
        _next:
          value: 2
          _next: null
  inputs_cast_as: Data
  outputs_cast_as: dict
  expected_outputs:
  - current_node:
      head: null
  - current_node:
      head: 
        value: 1
        _next: null
  - current_node:
      head: 
        value: 1
        _next:
          value: 2
          _next: null
  assertions:
  - has_values
- function_name: get_node_group_and_current_node
  description: | 
    Returns a list of groups of nodes, with the groups
    being of length k, in order from the linked list;
    and the remainder of the linked list that couldn't
    form a complete group or None if all of the nodes of
    the linked list can be placed into groups.
  inputs_values:
    - linked_list:
        head: null
      k: 0
    - linked_list:
        head:
          value: 1
          _next: null
      k: 0
    - linked_list:
        head:
          value: 1
          _next: null
      k: 1
    - linked_list:
        head:
          value: 1
          _next: null
      k: 2
    - linked_list:
        head:
          value: 1
          _next: 
            value: 2
            _next: null
      k: 2
    - linked_list:
        head:
          value: 1
          _next: 
            value: 2
            _next: 
              value: 3
              _next: null
      k: 2
    - linked_list:
        head: 
          value: 1
          _next:
            value: 2
            _next:
              value: 3
              _next: 
                value: 4
                _next:
                  value: 5
                  _next: null
        k: 2
  inputs_cast_as: Data
  expected_outputs:
  - node_groups: []
    current_node: null
  - node_groups: []
    current_node:
      value: 1
      _next: null
  - node_groups:
    - value: 1
      _next: null
    current_node: null
  - node_groups: []
    current_node:
      value: 1
      _next: null
  - node_groups:
    - value: 1
      _next: null
    - value: 2
      _next: null
    current_node: null
  - node_groups:
    - value: 1
      _next: null
    - value: 2
      _next: null
    current_node: 
      value: 3
      _next: null
  - node_groups:
    - value: 1
      _next: null
    - value: 2
      _next: null
    current_node:
      value: 3
      _next: 
        value: 4
        _next:
          value: 5
          _next: null
  outputs_cast_as: Store
  assertions: [equals]
- function_name: get_node_groups
  description: |
    Returns a list of groups of nodes of size k if
    any, and the current node that's a linked list
    of ungrouped nodes
  inputs_values:
    - linked_list:
        head: null
      k: 0
    - linked_list:
        head:
          value: 1
          _next: null
      k: 0
    - linked_list:
        head:
          value: 1
          _next: null
      k: 1
    - linked_list:
        head:
          value: 1
          _next: null
      k: 2
    - linked_list:
        head:
          value: 1
          _next: 
            value: 2
            _next: null
      k: 2
    - linked_list:
        head:
          value: 1
          _next: 
            value: 2
            _next: 
              value: 3
              _next: null
      k: 2
    - linked_list:
        head: 
          value: 1
          _next:
            value: 2
            _next:
              value: 3
              _next: 
                value: 4
                _next:
                  value: 5
                  _next: null
        k: 2
  inputs_cast_as: Data
  expected_outputs:
  - node_groups: 
    - []
    current_node: null
  - node_groups: 
    - []
    current_node:
      value: 1
      _next: null
  - node_groups:
    - value: 1
      _next: null
    current_node: null
  - node_groups:
    - []
    current_node: 
      value: 1
      _next: null
  - node_groups:
    - - value: 1
        _next: null
      - value: 2
        _next: null
    current_node: null
  - node_groups:
    - - value: 1
        _next: null
      - value: 2
        _next: null
    current_node:
      value: 2
      _next: null
  - node_groups:
    - - value: 3
        _next: null
      - value: 2
        _next:
          value: 1
          _next: null
    - - value: 1
        _next: null
      - value: 2
        _next: null
    - - value: 3
        _next: null
      - value: 4
        _next: null
    current_node:
      value: 5
      _next: null
  assertions: [has_values]
- function_name: process_node_groups
  description: |
    Process node groups by creating linked lists of
    the nodes in reverse order of how the nodes 
    grouped, and adds the current node to the 
    beggining of the list of node groups
  inputs_values:
    - node_groups: 
      - []
      current_node: null
    - node_groups: 
      - []
      current_node:
        value: 1
        _next: null
    - node_groups:
      - value: 1
        _next: null
      current_node: null
    - node_groups:
      - []
      current_node: 
        value: 1
        _next: null
    - node_groups:
      - - value: 1
          _next: null
        - value: 2
          _next: null
      current_node: null
    - node_groups:
      - - value: 1
          _next: null
        - value: 2
          _next: null
      current_node:
        value: 2
        _next: null
    - node_groups:
      - - value: 1
          _next: null
        - value: 2
          _next: null
      - - value: 3
          _next: null
        - value: 4
          _next: null
      current_node:
        value: 5
        _next: null
  inputs_cast_as: null
  expected_outputs:
  - node_groups:
    - - null
      - value: 1
        _next: null
  - node_groups:
    - - null
      - value:
        _next: null
  - node_groups:
    - - value: 1
        _next: null
  - node_groups:
    - - null
      - value: 2
        _next:
          value: 1
          _next: null
  - node_groups:
    - - value: 3
        _next: null
      - value: 2
        _next:
          value: 1
          _next: null
  - node_groups:
    - - value: 5
        _next: null
      - value: 2
        _next:
          value: 1
          _next: null
      - value: 4
        _next:
          value: 3
          _next: null
  outputs_cast_as: Data
  assertions: [has_values]
- function_name: get_modified_linked_list
  description: |
    Returns a linked list from a groups of nodes of
    size k, in reverse order 
  inputs_values:
  - node_groups:
    - value: 1
      _next:
        value: 2
        _next:
          value: 3
          _next: 
            value: 4
            _next:
              value: 5
              _next: null
  - node_groups:
    - null
    - value: 1
      _next: null
    - value: 2
      _next:
        value: 1
        _next: null
    - value: 3
      _next: 
        value: 2
        _next:
          value: 1
          _next: null
    - value: 4
      _next:
        value: 3
        _next: 
          value: 2
          _next:
            value: 1
            _next: null
    - value: 5
      _next:
        value: 4
        _next:
          value: 3
          _next: 
            value: 2
            _next:
              value: 1
              _next: null
  - node_groups:
    - value: 4
      _next: 
        value: 5
        _next: null
    - value: 3
      _next:
        value: 2
        _next: 
          value: 1
          _next: 
            value: 4
            _next:
              value: 5
              _next: null
  - node_groups:
    - value: 4
      _next: 
        value: 5
        _next: null
    - value: 3
      _next:
        value: 2
        _next:
          value: 1
          _next:
            value: 4
            _next:
              value: 5
              _next: null
  - node_groups:
    - value: 5
      _next: null
    - value: 4
      _next:
        value: 3
        _next:
          value: 2
          _next:
            value: 1
            _next:
              value: 5
              _next: null
  - node_groups: 
    - null
    - value: 5
      _next: 
        value: 4
        _next:
          value: 3
          _next:
            value: 2
            _next:
              value: 1
              _next: null
  inputs_cast_as: null
  expected_outputs:
  - head:
      value: 3
      _next:
        value: 2
        _next:
          value: 1
          _next:
            value: 4
            _next: 
              value: 5
              _next: null
  - head:
      value: 4
      _next: 
        value: 3
        _next: 
          value: 2
          _next:
            value: 1
            _next:
              value: 5
              _next: null
  - head:
      value: 4
      _next: 
        value: 3
        _next: 
          value: 2
          _next:
            value: 1
            _next:
              value: 5
              _next: null
  - head:
    value: 4
    _next: 
      value: 3
      _next: 
        value: 2
        _next:
          value: 1
          _next:
            value: 5
            _next: null
  - head:
      value: 4
      _next: 
        value: 3
        _next: 
          value: 2
          _next:
            value: 1
            _next:
              value: 5
              _next: null
  outputs_cast_as: dict
  assertions: equals
- function_name: main
  description: |
    Returns a linked list modified in reverse node k
    group order
  inputs_values: 
  - linked_list:
      head: 
        value: 1
        _next:
          value: 2
          _next:
            value: 3
            _next: 
              value: 4
              _next:
                value: 5
                _next: null
      k: 2
  - linked_list:
      head: 
        value: 1
        _next:
          value: 2
          _next:
            value: 3
            _next: 
              value: 4
              _next:
                value: 5
                _next: null
      k: 3
  inputs_cast_as: Data
  expected_outputs:
  - modified_linked_list:
    - value: 4
      _next:
        value: 3
        _next:
          value: 2
          _next:
            value: 1
            _next:
              value: 5
              _next: null
    - value: 3
      _next:
        value: 2
        _next:
          value: 1
          _next:
            value: 4
            _next: 
              value: 5
              _next: null
  assertions: [has_values]
