paths: 
  '/{path}/':
    post:
      tags:
      - Wrappers
      summary: Amazon Web Services (AWS)
      description: |
        A wrapper over the AWS SDK for Python (Boto3) that allows one to 
        make requests through the SDK API by defining the service (client), 
        request (method), and parameters in a YAML string, as opposed to 
        writing code.
      requestBody:
        content:
          text/plain:
            schema:
              type: string
              services:
              - name: string
                parameters: 
                  AnyValue: {}
                parse_response: str
              chain: bool
            examples:
              'S3 - List Buckets':
                value: |
                  client: s3
                  method: list_buckets
                  parameters: null
                  parse_response: 
                  - Buckets.Name
              'S3 - List Bucket Objects':
                value: |
                  client: s3
                  method: list_objects
                  parameters:
                    Bucket: ${S3_BUCKET}
                  parse_response:
                  - Contents.Key
              'S3 - Put Object':
                value: |
                  client: s3
                  method: put_object
                  parameters:
                    Bucket: ${S3_BUCKET}
                    Body: '{"test": "test"}'
                    Key: test_000
                  parse_response:
                  - ResponseMetadata.HTTPStatusCode
              'S3 - Create Bucket':
                value: |
                  client: s3
                  method: create_bucket
                  parameters:
                    Bucket: helloworld04232021
                  parse_response:
                  - ResponseMetadata.HTTPHeaders.location
              'S3 - Delete Bucket':
                value: |
                  client: s3
                  method: delete_bucket
                  parameters: 
                    Bucket: helloworld04232021
                  parse_response:
                  - ResponseMetadata.HTTPStatusCode
              'ECR - Create Repository':
                value: |
                  client: ecr
                  method: create_repository
                  parameters:
                    repositoryName: example_repository
                    tags: 
                      - Key: example
                        Value: an example ecr repository
                    imageScanningConfiguration:
                      scanOnPush: true
                    encryptionConfiguration:
                      encryptionType: AES256
                  parse_response: 
                  - ResponseMetadata.HTTPStatusCode
              'Lambda - List Functions':
                value: |
                  client: lambda
                  method: list_functions
                  parameters: null
                  parse_response: 
                  - Functions
      responses:
        200:
          description: Success
          content: 
            text/plain:
              schema:
                type: string
                response: object
              examples:
                'S3 - List Buckets':
                  value: |
                    - Buckets.Name: [
                        ${S3_BUCKET},
                        ...
                      ]
                'S3 - List Bucket Objects':
                  value: |
                    - Contents.Key: [ ... ]
                'S3 - Put Object':
                  value: |
                    - ResponseMetadata.HTTPStatusCode: 200
                'S3 - Create Bucket':
                  value: |
                    - ResponseMetadata.HTTPHeaders.location: / ...
                'S3 - Delete Bucket':
                  value: |
                    - ResponseMetadata.HTTPStatusCode: 204
                'Lambda - List Functions':
                  value: |
                    - Functions: [ ... ]
        500:
          description: Internal Server Error
          content: 
            text/plain:
              schema:
                type: string
                detail:
                  Code: string
                  Message: string
              examples:
                'ECR - Create Repository That Already Exists':
                  value: |
                    detail: 
                      Code: RepositoryAlreadyExistsException
                      Message: ...
        