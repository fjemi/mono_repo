environment:
  DEBUG: True
tests:
- function_name: get_edge_corner
  description: >
  inputs_values:
  - step: [-1, -1]
    center_position: [2, 2]
    partition: [5, 5]
    i: 1
  - step: [-1, 1] 
    center_position: [2, 2]
    partition: [5, 5]
    i: 1
  - step: [-1, -1]
    center_position: [2, 2]
    partition: [5, 5]
    i: 1
  - step: [1, -1]
    center_position: [2, 2]
    partition: [5, 5]
    i: 1
  - step: [-1, 1] 
    center_position: [2, 2]
    partition: [5, 5]
    i: 1
  - step: [1, 1] 
    center_position: [2, 2]
    partition: [5, 5]
    i: 1
  - step: [1, -1] 
    center_position: [2, 2] 
    partition: [5, 5] 
    i: 1
  - step: [1, 1] 
    center_position: [2, 2] 
    partition: [5, 5] 
    i: 1
  - step: [-1, -1] 
    center_position: [2, 2] 
    partition: [5, 5] 
    i: 2
  - step: [-1, 1] 
    center_position: [2, 2] 
    partition: [5, 5] 
    i: 2
  - step: [-1, -1] 
    center_position: [2, 2] 
    partition: [5, 5] 
    i: 2
  - step: [1, -1] 
    center_position: [2, 2] 
    partition: [5, 5] 
    i: 2
  - step: [-1, 1] 
    center_position: [2, 2] 
    partition: [5, 5] 
    i: 2
  - step: [1, 1] 
    center_position: [2, 2] 
    partition: [5, 5] 
    i: 2
  - step: [1, -1] 
    center_position: [2, 2] 
    partition: [5, 5] 
    i: 2
  - step: [1, 1] 
    center_position: [2, 2] 
    partition: [5, 5] 
    i: 2
  - step: [-1, -1] 
    center_position: [2, 2] 
    partition: [5, 5] 
    i: 3
  - step: [-1, -1] 
    center_position: [2, 2] 
    partition: [5, 5] 
    i: 3
  - step: [-1, 1] 
    center_position: [2, 2] 
    partition: [5, 5] 
    i: 3
  - step: [1, -1] 
    center_position: [2, 2] 
    partition: [5, 5] 
    i: 3
  expected_outputs:
  - '1.1'
  - '1.3'
  - '1.1'
  - '3.1'
  - '1.3'
  - '3.3'
  - '3.1'
  - '3.3'
  - '0.0'
  - '0.4'
  - '0.0'
  - '4.0'
  - '0.4'
  - '4.4'
  - '4.0'
  - '4.4'
  - ''
  - ''
  - ''
  - ''
  assertions: equals
- function_name: pre_processing
  description: Initializes the dataclass object used within the module from arguments passed into the main function of the module
  inputs_values:
  - m: 0
    n: 0
  - shape: [0, 0]
  - m: 2
    n: 2
  - shape: [3, 3]
  expected_outputs:
  - shape: [0, 0]
  - shape: [1, 1]
  - shape: [2, 2]
  - shape: [3, 3]
  assertions:
  - - has_values
    - type: Data
- function_name: get_partitions
  description: Returns the shape of m*n matrices that make up 
  inputs_values:
  - m: 1
    n: 1
  - m: 2
    n: 2
  - m: 2
    n: 3
  - m: 4
    n: 3
  - m: 4
    n: 4
  - m: 5
    n: 5
  exepcted_outputs:
  - - [1, 1]
  - - [2, 2]
  - - [2, 3]
    - [1, 2]
  - - [4, 3]
    - [1, 3]
  - - [ 4, 4]
  - - [5, 5]
  assertions: equals
- function_name: get_parity
  description: |
    Returns the parity for the largest partition (array or square)
    of an m*n matrix
  inputs_values:
  - partition: [1, 1]
  - partition: [1, 2]
  - partition: [2, 2]
  - partition: [2, 3]
  - partition: [3, 5]
  - partition: [4, 5]
  exepcted_outputs:
  - odd
  - odd
  - even
  - even
  - odd
  - even
  assertions: equals
- function_name: get_shape
  description: |
    Returns the shape (array or square) of partition for an m*n matrix
  inputs_values:
  - partition: [1, 1]
  - partition: [1, 4]
  - partition: [4, 4]
  - partition: [5, 4]
  exepcted_outputs:
  - array
  - array
  - square
  - square
  assertions: equals 
- function_name: get_center_edges_for_array
  description: |
    Return the center position of an array as an edge. The edge
    contains the center position of an odd array twice or the 
    two center positions of a even array
    - [a, b, c] -> [b, b]
    - [a, b, c, d] -> [b, c]
  inputs_values:
  - m: 1
    n: 1
    parity: odd 
  - m: 1
    n: 2
    parity: even 
  - m: 2
    n: 1
    parity: odd 
  - m: 1
    n: 4
    parity: even 
  - m: 5
    n: 1
    parity: odd
  exepcted_outputs:
  - ['0.0', '0.0']
  - ['0.0', '0.1']
  - ['0.0', '1.0']
  - ['0.1', '0.2']
  - ['2.0', '2.0']
  assertions: equals
- function_name: set_shifter_for_square_center_edges
  description: |
    Returns a dictionary that is used to shift the center edges
    square partitions of m*n matrices. The keys of the dictionary
    represent the indices in the positions of the center edges,
    and the values are the amount to shift index; shifts to the
    right or down
  inputs_values:
  - m: 0
    n: 0
  - m: 1
    n: 1
  - m: 2
    n: 3
  - m: 5
    n: 3
  - m: 5
    n: 6
  exepcted_outputs:
  - {0: 0, 1: 0}
  - {0: 0, 1: 0}
  - {0: 0, 1: 1}
  - {0: 2, 1: 0}
  - {0: 0, 1: 1}
  assertions: equals
- function_name: get_center_edges_for_square_even
  description: |
    Returns the four positions that make the center of a square
    partition of a matrix
  inputs_values:
  - m: 2
    n: 2
  - m: 2
    n: 3
  - m: 4
    n: 4
  - m: 4
    n: 5
  exepcted_outputs:
  - - ['0.0', '0.0']
    - ['0.1', '0.1']
    - ['1.0', '1.0']
    - ['1.1', '1.1']
  - - ['0.1', '0.1']
    - ['0.2', '0.2']
    - ['1.1', '1.1']
    - ['1.2', '1.2']
  - - ['1.1', '1.1']
    - ['1.2', '1.2']
    - ['2.1', '2.1']
    - ['2.2', '2.2']
  - - ['1.2', '1.2']
    - ['1.3', '1.3']
    - ['2.2', '2.2']
    - ['2.3', '2.3']
  assertions: equals
- function_name: get_center_edges_for_square_odd
  description: |
    Returns the center position of an odd square partition of an
    m*n matrix
  inputs_values:
  - m: 1
    n: 1
  - m: 3
    n: 3
  - m: 4
    n: 3
  - m: 3
    n: 5
  exepcted_outputs:
  - ['0.0', '0.0']
  - ['1.1', '1.1']
  - ['2.1', '2.1']
  - ['3.1', '3.1']
  assertions: equals
- function_name: get_center_edges_for_square
  description: >
    A siwtcher function that calls and returns the center edges
    for partition squares of even or odd parity
  inputs_values:
  - m: 2
    n: 2
    parity: even
  - m: 3
    n: 3
    parity: odd
  exepcted_outputs:
  - - ['0.0', '0.0']
    - ['0.1', '0.1']
    - ['1.0', '1.0']
    - ['1.1', '1.1']
  - - ['1.1', '1.1']
  assertions: equals
- function_name: get_center_edges
  description: |
    A switcher function that returns center edges for
    an array or a square of even or odd parity
  inputs_values:
  - partition: [1, 1]
    shape: array
    parity: odd
  - partition: [2, 1]
    shape: array
    parity: even
  - partition: [2, 2]
    shape: square
    parity: even
  - partition: [3, 4]
    shape: square
    parity: odd
  exepcted_outputs:
  - - ['0.0', '0.0']
  - - ['0.0', '1.0']
  - - ['0.0', '0.0']
    - ['0.1', '0.1']
    - ['1.0', '1.0']
    - ['1.1', '1.1']
  - - ['1.1', '1.1']
  assertions: equals
- function_name: get_outer_edges_for_array
  description: |
    Returns the outer edges, or two partions that make up an 
    array. Splits an array into two halves.
  inputs_values:
  - partition: [1, 1]
    center_edges: [['0.0', '0.0']]
    parity: odd
    square_steps: null
  - partition: [1, 3]
    center_edges: [['0.1', '0.1']]
    parity: odd
    square_steps: null
  - partition: [4, 1]
    center_edges: [['1.0', '2.0']]
    parity: eveb
    square_steps: null
  exepcted_outputs:
  - - ['0.0', '0.0']
    - ['0.0', '0.0']
  - - ['0.0', '0.1']
    - ['0.1', '0.2']
  - - ['0.0', '1.0']
    - ['2.0', '3.0']
  assertions: equals
- function_name: get_outer_edges_for_square
  description: >
    Returns the outer edges of the square partitions of an 
    m*n matrix
  inputs_values: 
  - partition: [3, 3]
    parity: odd
    center_edges:  [['1.1', '1.1']]
    square_steps: 
      even:
        3:
        - [[1, 0], [1, 1]]
        - [[0, 1], [1, 1]]
        2:
        - [[0, -1]], [1, -1]]
        - [[1, -1], [1, 0]]
        1: 
        - [[-1, 0], [-1, 1]]
        - [[-1, 1], [0, 1]]
        0: 
        - [[-1, -1], [-1, 0]]
        - [[-1, -1], [0, -1]]
      odd:
        0:
        - [[-1, -1], [-1, 1]]
        - [[-1, -1], [1, -1]]
        - [[-1, 1], [1, 1]]
        - [[1, -1], [1, 1]]
  - partition: [4, 5]
    parity: even
    center_edges:  
    - ['1.2', '1.2']
    - ['1.3', '1.3']
    - ['2.2', '2.2']
    - ['2.3', '2.3']
    square_steps: 
      even:
        3:
        - [[1, 0], [1, 1]]
        - [[0, 1], [1, 1]]
        2:
        - [[0, -1]], [1, -1]]
        - [[1, -1], [1, 0]]
        1: 
        - [[-1, 0], [-1, 1]]
        - [[-1, 1], [0, 1]]
        0: 
        - [[-1, -1], [-1, 0]]
        - [[-1, -1], [0, -1]]
      odd:
        0:
        - [[-1, -1], [-1, 1]]
        - [[-1, -1], [1, -1]]
        - [[-1, 1], [1, 1]]
        - [[1, -1], [1, 1]]
  - partition: [6, 5]
    parity: odd
    center_edges:  [['3.2', '3.2']]
    square_steps: 
      even:
        3:
        - [[1, 0], [1, 1]]
        - [[0, 1], [1, 1]]
        2:
        - [[0, -1]], [1, -1]]
        - [[1, -1], [1, 0]]
        1: 
        - [[-1, 0], [-1, 1]]
        - [[-1, 1], [0, 1]]
        0: 
        - [[-1, -1], [-1, 0]]
        - [[-1, -1], [0, -1]]
      odd:
        0:
        - [[-1, -1], [-1, 1]]
        - [[-1, -1], [1, -1]]
        - [[-1, 1], [1, 1]]
        - [[1, -1], [1, 1]]
  exepcted_outputs:
  - - ['0.0', '0.2']
    - ['0.0', '2.0']
    - ['2.0', '2.2']
    - ['0.2', '2.2']
  - - ['0.1', '0.2']
    - ['0.1', '1.1']
    - ['0.3', '0.4']
    - ['0.4', '1.4']
    - ['2.1', '3.1']
    - ['3.1', '3.2']
    - ['3.3', '3.4']
    - ['2.4', '3.4']
  - - ['2.1', '2.3']
    - ['2.1', '4.1']
    - ['2.3', '4.3']
    - ['4.1', '4.3']
    - ['1.0', '1.4']
    - ['1.0', '5.0']
    - ['1.4', '5.4']
    - ['5.0', '5.4']
  assertions: equals
- function_name: get_outer_edges
  description:
  inputs_values:
  - partition: [1, 5]
    shape: 'array'
    parity: 'odd'
    center_edges: [['0.2', '0.2']]
    square_steps: 
      even:
        3:
        - [[1, 0], [1, 1]]
        - [[0, 1], [1, 1]]
        2:
        - [[0, -1]], [1, -1]]
        - [[1, -1], [1, 0]]
        1: 
        - [[-1, 0], [-1, 1]]
        - [[-1, 1], [0, 1]]
        0: 
        - [[-1, -1], [-1, 0]]
        - [[-1, -1], [0, -1]]
      odd:
        0:
        - [[-1, -1], [-1, 1]]
        - [[-1, -1], [1, -1]]
        - [[-1, 1], [1, 1]]
        - [[1, -1], [1, 1]]
  - partition: [6, 1]
    shape: 'array'
    parity: 'even'
    center_edges: [['2.0', '3.0']]
    square_steps: 
      even:
        3:
        - [[1, 0], [1, 1]]
        - [[0, 1], [1, 1]]
        2:
        - [[0, -1]], [1, -1]]
        - [[1, -1], [1, 0]]
        1: 
        - [[-1, 0], [-1, 1]]
        - [[-1, 1], [0, 1]]
        0: 
        - [[-1, -1], [-1, 0]]
        - [[-1, -1], [0, -1]]
      odd:
        0:
        - [[-1, -1], [-1, 1]]
        - [[-1, -1], [1, -1]]
        - [[-1, 1], [1, 1]]
        - [[1, -1], [1, 1]]
  - partition: [3, 3]
    shape: 'array'
    parity: 'odd'
    center_edges: [['1.1', '1.1']]
    square_steps: 
      even:
        3:
        - [[1, 0], [1, 1]]
        - [[0, 1], [1, 1]]
        2:
        - [[0, -1]], [1, -1]]
        - [[1, -1], [1, 0]]
        1: 
        - [[-1, 0], [-1, 1]]
        - [[-1, 1], [0, 1]]
        0: 
        - [[-1, -1], [-1, 0]]
        - [[-1, -1], [0, -1]]
      odd:
        0:
        - [[-1, -1], [-1, 1]]
        - [[-1, -1], [1, -1]]
        - [[-1, 1], [1, 1]]
        - [[1, -1], [1, 1]]
  - partition: [4, 4]
    shape: 'array'
    parity: 'even'
    center_edges: 
    - ['1.1', '1.1']
    - ['2.1', '2.1']
    - ['1.2', '1.2']
    - ['2.2', '2.2']
    square_steps: 
      even:
        3:
        - [[1, 0], [1, 1]]
        - [[0, 1], [1, 1]]
        2:
        - [[0, -1]], [1, -1]]
        - [[1, -1], [1, 0]]
        1: 
        - [[-1, 0], [-1, 1]]
        - [[-1, 1], [0, 1]]
        0: 
        - [[-1, -1], [-1, 0]]
        - [[-1, -1], [0, -1]]
      odd:
        0:
        - [[-1, -1], [-1, 1]]
        - [[-1, -1], [1, -1]]
        - [[-1, 1], [1, 1]]
        - [[1, -1], [1, 1]]
  exepcted_outputs:
  - [['0.0', '0.2'], ['0.2', '0.4']]
  - [['0.0', '2.0'], ['3.0', '5.0']]
  - - ['0.0', '0.2']
    - ['0.0', '2.0']
    - ['0.2', '2.2']
    - ['2.0', '2.2']
  - - ['0.0', '0.1']
    - ['0.0', '1.0']
    - ['2.0', '3.0']
    - ['3.0', '3.1']
    - ['0.2', '0.3']
    - ['0.3', '1.3']
    - ['3.2', '2.3']
    - ['2.3', '3.2']
  assertions: equals
- function_name: process_partitions
  description: >
    Determines the shapes and parities of partitions, then sets
    each partitions center and outer edges
  inputs_values:
  - partitions: [[2, 2], [1, 1]]
    square_steps: 
      even:
        3:
        - [[1, 0], [1, 1]]
        - [[0, 1], [1, 1]]
        2:
        - [[0, -1]], [1, -1]]
        - [[1, -1], [1, 0]]
        1: 
        - [[-1, 0], [-1, 1]]
        - [[-1, 1], [0, 1]]
        0: 
        - [[-1, -1], [-1, 0]]
        - [[-1, -1], [0, -1]]
      odd:
        0:
        - [[-1, -1], [-1, 1]]
        - [[-1, -1], [1, -1]]
        - [[-1, 1], [1, 1]]
        - [[1, -1], [1, 1]]
  - partitions: [[2, 1], [2, 3]]
    square_steps: 
      even:
        3:
        - [[1, 0], [1, 1]]
        - [[0, 1], [1, 1]]
        2:
        - [[0, -1]], [1, -1]]
        - [[1, -1], [1, 0]]
        1: 
        - [[-1, 0], [-1, 1]]
        - [[-1, 1], [0, 1]]
        0: 
        - [[-1, -1], [-1, 0]]
        - [[-1, -1], [0, -1]]
      odd:
        0:
        - [[-1, -1], [-1, 1]]
        - [[-1, -1], [1, -1]]
        - [[-1, 1], [1, 1]]
        - [[1, -1], [1, 1]]
  inputs_cast_as: Data
  exepcted_outputs: 
  - shapes: ['square', 'array']
    center_edges: 
    - ['0.0', '0.0']
    - ['1.0', '1.0']
    - ['0.1', '0.1']
    - ['1.1', '1.1']
    - ['0.0', '0.0']
    outer_edges: 
    - ['0.0', '0.0']
    - ['1.0', '1.0']
    - ['0.1', '0.1']
    - ['1.1', '1.1']
    - ['0.0', '0.0']
  - shapes: ['array', 'square']
    center_edges: 
    - ['0.0', '1.0']
    - ['0.0', '0.1']
    - ['1.1', '1.1']
    outer_edges: 
    - ['0.0', '0.0']
    - ['1.0', '1.0']
    - ['0.0', '0.2'] 
    - ['0.0', '2.0'] 
    - ['0.2', '2.2'] 
    - ['2.0', '2.2']
  assertions: has_values
- function_name: post_processing
  description: Returns the center and outer edges as a single list
  inputs_values:
  - center_edges: [[center_edge_0]] 
    outer_edges: [[outer_edge_0]]
  - center_edges: [[center_edge_0], [outer_edge_1]] 
    outer_edges: [[outer_edge_0], [outer_edge_1]]
  inputs_cast_as: Data
  exepcted_outputs:
  - [[center_edge_0], [outer_edge_0]]
  - - [center_edge_0]
    - [center_edge_1]
    - [outer_edge_0]
    - [outer_edge_1]
  assertions: equals
- function_name: main
  description: >
    Orchestration function that execute the other functions within
    the module. Returns the edges of the partitions that make up a
    matrix
  inputs_values:
  - m: 2
    n: 2
  - values:
    - [1, 1]
    - [1, 1]
  exepcted_outputs:
  - - ['0.0', '0.0']
    - ['1.0', '1.0']
    - ['0.1', '0.1']
    - ['1.1', '1.1']
    - ['0.0', '0.0']
    - ['1.0', '1.0']
    - ['0.1', '0.1']
    - ['1.1', '1.1']
  - - ['0.0', '0.0']
    - ['1.0', '1.0']
    - ['0.1', '0.1']
    - ['1.1', '1.1']
    - ['0.0', '0.0']
    - ['1.0', '1.0']
    - ['0.1', '0.1']
    - ['1.1', '1.1']
  assertions: equals
